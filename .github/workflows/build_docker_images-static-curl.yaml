name: 'build docker images: static cURL'

on:
  #push:
  #  branches:
  #    - 'main'
  #    - 'master'
  #  paths:
  #    - 'static-curl.scratch.Dockerfile'
  #    - '.github/workflows/build_docker_images-static-curl.yaml'
  workflow_dispatch:
  schedule:
    - cron: '30 5 28 * *'  # At 05:30 on day-of-month 28.

defaults:
  run:
    shell: bash

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Shell-Script
        id: script
        run: |
          BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          BUILD_DATE_NUMERIC="${BUILD_DATE//[^[:digit:]]/}"
          COMMIT_HASH=${GITHUB_SHA::7}
          GIT_URL=$(echo "${GITHUB_SERVER_URL}" | awk -F/ '{print $3}' | sed 's/\/*$//')
          GIT_URL=$(echo "$GIT_URL" | sed 's/github\.com/ghcr\.io/g')   # GIT_URL switch to ghcr.io registry for GitHub
          GIT_REPO=${GITHUB_REPOSITORY,,}
          GIT_REPO_SHORT=${GIT_REPO#*/}
          GIT_REPO_SHORT=${GIT_REPO_SHORT#"docker-"}
          DOCKER_REPO=${{ secrets.DOCKER_USERNAME }}/${GIT_REPO_SHORT}
          REDHAT_QUAY_REPO=${{ secrets.REDHAT_QUAY_USERNAME }}/${GIT_REPO_SHORT}

          #echo "ENVs: BUILD_DATE=${BUILD_DATE}, BUILD_DATE_NUMERIC=${BUILD_DATE_NUMERIC}, COMMIT_HASH=${COMMIT_HASH}, GIT_URL=${GIT_URL}, GIT_REPO=${GIT_REPO}"
          
          # Set output parameters to action.
          echo "build_date=${BUILD_DATE}" >> "$GITHUB_OUTPUT"
          echo "build_date_numeric=${BUILD_DATE_NUMERIC}" >> "$GITHUB_OUTPUT"
          echo "commit_hash=${COMMIT_HASH}" >> "$GITHUB_OUTPUT"
          echo "git_url=${GIT_URL}" >> "$GITHUB_OUTPUT"
          echo "git_repo=${GIT_REPO}" >> "$GITHUB_OUTPUT"
          echo "docker_repo=${DOCKER_REPO}" >> "$GITHUB_OUTPUT"
          echo "redhat_quay_repo=${REDHAT_QUAY_REPO}" >> "$GITHUB_OUTPUT"

          # static cURL
          CURL_VERSION=$(wget -qO- https://api.github.com/repos/stunnel/static-curl/releases/latest | grep 'tag_name' | cut -d\" -f4)
          echo "CURL_VERSION=${CURL_VERSION}"
          echo "curl_version=${CURL_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3          

      - name: Login to GIT Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.script.outputs.git_url }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to RED HAT Quay.io Container Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.REDHAT_QUAY_USERNAME }}
          password: ${{ secrets.REDHAT_QUAY_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./static-curl.scratch.Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x
          push: true
          build-args: |
            BUILD_DATE=${{steps.script.outputs.build_date}}
            VCS_REF=${{steps.script.outputs.commit_hash}}
            CURL_VERSION=${{steps.script.outputs.curl_version}}
          tags: |
            docker.io/${{steps.script.outputs.docker_repo}}:static-curl
            docker.io/${{steps.script.outputs.docker_repo}}:static-curl-${{steps.script.outputs.curl_version}}
            quay.io/${{steps.script.outputs.redhat_quay_repo}}:static-curl
            ${{steps.script.outputs.git_url}}/${{steps.script.outputs.git_repo}}:static-curl

      #- name: Docker Hub Description
      #  uses: peter-evans/dockerhub-description@v4
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}
      #    repository: ${{steps.script.outputs.docker_repo}}
      #    short-description: ${{ github.event.repository.description }}
      #    readme-filepath: README.md